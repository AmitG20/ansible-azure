{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "storageAccountName": {
        "type": "string",
        "metadata": {
          "description": "Name of storage account"
        }
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Admin username"
        }
      },
      "adminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Admin password"
        }
      },
      "dnsNameforLBIP": {
        "type": "string",
        "metadata": {
          "description": "DNS for Load Balancer IP"
        }
      },
      "vmNamePrefix": {
        "type": "string",
        "defaultValue": "myVM",
        "metadata": {
          "description": "Prefix to use for VM names"
        }
      },
      "imagePublisher": {
        "type": "string",
        "defaultValue": "MicrosoftWindowsServer",
        "metadata": {
          "description": "Image Publisher"
        }
      },
      "imageOffer": {
        "type": "string",
        "defaultValue": "WindowsServer",
        "metadata": {
          "description": "Image Offer"
        }
      },
      "imageSKU": {
        "type": "string",
        "defaultValue": "2016-Datacenter",
        "metadata": {
          "description": "Image SKU"
        }
      },
      "lbName": {
        "type": "string",
        "defaultValue": "webLB",
        "metadata": {
          "description": "Load Balancer name"
        }
      },
      "nicNamePrefix": {
        "type": "string",
        "defaultValue": "nic",
        "metadata": {
          "description": "Network Interface name prefix"
        }
      },
      "publicIPAddressName": {
        "type": "string",
        "defaultValue": "WebPublicIP",
        "metadata": {
          "description": "Public IP Name"
        }
      },
      "vnetName": {
        "type": "string",
        "defaultValue": "WebVNET",
        "metadata": {
          "description": "VNET name"
        }
      },
      "vmSize": {
        "type": "string",
        "defaultValue": "Standard_D2s_v3",
        "metadata": {
          "description": "Size of the VM"
        }
      }
    },
    "variables": {
      "storageAccountType": "Standard_LRS",
      "availabilitySetName": "myAvSet",
      "addressPrefix": "10.10.0.0/16",
      "frontendSubnetName": "FrontendSubnet",
      "frontendSubnetPrefix": "10.10.0.0/24",
      "backendSubnetName": "BackendSubnet",
      "backendSubnetPrefix": "10.10.1.0/24",
      "publicIPAddressType": "Dynamic",
      "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('vnetName'))]",
      "frontendSubnetRef": "[concat(variables('vnetID'),'/subnets/',variables ('frontendSubnetName'))]",
      "backendSubnetRef": "[concat(variables('vnetID'),'/subnets/',variables ('backendSubnetName'))]",
      "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName'))]",
      "numberOfInstances": 2,
      "lbID": "[resourceId('Microsoft.Network/loadBalancers',parameters('lbName'))]",
      "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/LoadBalancerFrontEnd')]",
      "lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/BackendPool1')]",
      "lbProbeID": "[concat(variables('lbID'),'/probes/tcpProbe')]"
    },
    "resources": [
      {
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[parameters('storageAccountName')]",
        "apiVersion": "2015-05-01-preview",
        "location": "[resourceGroup().location]",
        "properties": {
          "accountType": "[variables('storageAccountType')]"
        }
      },
      {
        "type": "Microsoft.Compute/availabilitySets",
        "name": "[variables('availabilitySetName')]",
        "apiVersion": "2016-04-30-preview",
        "location": "[resourceGroup().location]",
        "properties": {
          "platformFaultDomainCount": 2,
          "platformUpdateDomainCount": 2,
          "managed": true
        }
      },
      {
        "apiVersion": "2015-05-01-preview",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[parameters('publicIPAddressName')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
          "dnsSettings": {
            "domainNameLabel": "[parameters('dnsNameforLBIP')]"
          }
        }
      },
      {
        "apiVersion": "2015-05-01-preview",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[parameters('vnetName')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[variables('addressPrefix')]"
            ]
          },
          "subnets": [
            {
              "name": "[variables('frontendSubnetName')]",
              "properties": {
                "addressPrefix": "[variables('frontendSubnetPrefix')]"
              }
            },
            {
                "name": "[variables('backendSubnetName')]",
                "properties": {
                  "addressPrefix": "[variables('backendSubnetPrefix')]"
                }
              }
          ]
        }
      },
      {
        "apiVersion": "2015-05-01-preview",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat(parameters('nicNamePrefix'), copyindex())]",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "nicLoop",
          "count": "[variables('numberOfInstances')]"
        },
        "dependsOn": [
          "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]",
          "[concat('Microsoft.Network/loadBalancers/', parameters('lbName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "[variables('frontendSubnetRef')]"
                },
                "loadBalancerBackendAddressPools": [
                  {
                    "id": "[concat(variables('lbID'), '/backendAddressPools/BackendPool1')]"
                  }
                ],
                "loadBalancerInboundNatRules": [
                  {
                    "id": "[concat(variables('lbID'),'/inboundNatRules/RDP-VM', copyindex())]"
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2015-05-01-preview",
        "name": "[parameters('lbName')]",
        "type": "Microsoft.Network/loadBalancers",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIPAddressName'))]"
        ],
        "properties": {
          "frontendIPConfigurations": [
            {
              "name": "LoadBalancerFrontEnd",
              "properties": {
                "publicIPAddress": {
                  "id": "[variables('publicIPAddressID')]"
                }
              }
            }
          ],
          "backendAddressPools": [
            {
              "name": "BackendPool1"
            }
          ],
          "inboundNatRules": [
            {
              "name": "RDP-VM0",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[variables('frontEndIPConfigID')]"
                },
                "protocol": "tcp",
                "frontendPort": 50001,
                "backendPort": 3389,
                "enableFloatingIP": false
              }
            },
            {
              "name": "RDP-VM1",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[variables('frontEndIPConfigID')]"
                },
                "protocol": "tcp",
                "frontendPort": 50002,
                "backendPort": 3389,
                "enableFloatingIP": false
              }
            }
          ],
          "loadBalancingRules": [
            {
              "name": "LBRule",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[variables('frontEndIPConfigID')]"
                },
                "backendAddressPool": {
                  "id": "[variables('lbPoolID')]"
                },
                "protocol": "tcp",
                "frontendPort": 80,
                "backendPort": 80,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 5,
                "probe": {
                  "id": "[variables('lbProbeID')]"
                }
              }
            }
          ],
          "probes": [
            {
              "name": "tcpProbe",
              "properties": {
                "protocol": "tcp",
                "port": 80,
                "intervalInSeconds": 5,
                "numberOfProbes": 2
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2016-04-30-preview",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[concat(parameters('vmNamePrefix'), copyindex())]",
        "copy": {
          "name": "virtualMachineLoop",
          "count": "[variables('numberOfInstances')]"
        },
        "tags": {
            "service": "web"
        },
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
          "[concat('Microsoft.Network/networkInterfaces/', parameters('nicNamePrefix'), copyindex())]",
          "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
        ],
        "resources": [
            {
                "type": "Microsoft.Compute/virtualMachines/extensions",
                "name": "[concat(concat(parameters('vmNamePrefix'), copyindex()), concat('/WinRMCustomScriptExtension', copyindex()))]",
                "apiVersion": "2016-04-30-preview",
                "location": "[resourceGroup().location]",
                "dependsOn": [
                  "[concat('Microsoft.Compute/virtualMachines/', concat(parameters('vmNamePrefix'), copyindex()))]"
                ],
                "properties": {
                  "publisher": "Microsoft.Compute",
                  "type": "CustomScriptExtension",
                  "typeHandlerVersion": "1.4",
                  "settings": {
                    "fileUris": [
                      "https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1"
                    ],
                    "commandToExecute": "powershell -ExecutionPolicy Unrestricted -file ConfigureRemotingForAnsible.ps1"
                  }
                }
            }
        ],
        "properties": {
          "availabilitySet": {
            "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
          },
          "hardwareProfile": {
            "vmSize": "[parameters('vmSize')]"
          },
          "osProfile": {
            "computerName": "[concat(parameters('vmNamePrefix'), copyIndex())]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[parameters('imagePublisher')]",
              "offer": "[parameters('imageOffer')]",
              "sku": "[parameters('imageSKU')]",
              "version": "latest"
            },
            "osDisk": {
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('nicNamePrefix'),copyindex()))]"
              }
            ]
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": "true",
              "storageUri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net')]"
            }
          }
        }
      },
      {
        "apiVersion": "2015-05-01-preview",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "DatabaseVMNIC",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]",
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "[variables('backendSubnetRef')]"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2016-04-30-preview",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "DatabaseVM",
        "tags": {
            "service": "database"
        },
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
          "[concat('Microsoft.Network/networkInterfaces/', 'DatabaseVMNIC')]"
        ],
        "resources": [
            {
                "type": "Microsoft.Compute/virtualMachines/extensions",
                "name": "[concat('DatabaseVM','/WinRMCustomScriptExtension')]",
                "apiVersion": "2016-04-30-preview",
                "location": "[resourceGroup().location]",
                "dependsOn": [
                  "[concat('Microsoft.Compute/virtualMachines/', 'DatabaseVM')]"
                ],
                "properties": {
                  "publisher": "Microsoft.Compute",
                  "type": "CustomScriptExtension",
                  "typeHandlerVersion": "1.4",
                  "settings": {
                    "fileUris": [
                      "https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1"
                    ],
                    "commandToExecute": "powershell -ExecutionPolicy Unrestricted -file ConfigureRemotingForAnsible.ps1"
                  }
                }
            }
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "[parameters('vmSize')]"
          },
          "osProfile": {
            "computerName": "[concat(parameters('vmNamePrefix'), 'database')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[parameters('imagePublisher')]",
              "offer": "[parameters('imageOffer')]",
              "sku": "[parameters('imageSKU')]",
              "version": "latest"
            },
            "osDisk": {
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces','DatabaseVMNIC')]"
              }
            ]
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": "true",
              "storageUri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net')]"
            }
          }
        }
      }
    ]
  }